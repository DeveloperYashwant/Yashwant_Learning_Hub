# **Lecture 3: CSS Box Model & Layout**  


## **1. What is the CSS Box Model?**  

1️**Content** → The actual text or image inside the element.  
2️**Padding** → Space between content and the border.  
3️**Border** → The boundary around the element.  
4️**Margin** → Space outside the element (separates it from other elements).  

**Visual Representation:**  

+------------------------+  ← Margin  
|                        |  
|    +--------------+    |  ← Border  
|    |  Padding     |    |  
|    |  +-------+   |    |  ← Content  
|    |  | Text  |   |    |  
|    |  +-------+   |    |  
|    +--------------+    |  
|                        |  
+------------------------+  

---

## **2. Understanding Box Model Properties**
### **A) Content Properties**
| Property | Description | Example |
|----------|------------|---------|
| `width` | Sets the width of the content area | `width: 300px;` |
| `height` | Sets the height of the content area | `height: 200px;` |

### **B) Padding (Inside Space)**
| Property | Description | Example |
|----------|------------|---------|
| `padding` | Adds space inside the border | `padding: 20px;` |
| `padding-top` | Space above the content | `padding-top: 10px;` |
| `padding-right` | Space on the right side | `padding-right: 15px;` |
| `padding-bottom` | Space below the content | `padding-bottom: 10px;` |
| `padding-left` | Space on the left side | `padding-left: 15px;` |

**Example:**  

div {
  width: 200px;
  height: 100px;
  padding: 20px; /* Adds space inside */
  background-color: lightblue;
}

### **C) Border (Element Boundary)**
| Property | Description | Example |
|----------|------------|---------|
| `border` | Defines border style, width, and color | `border: 2px solid black;` |
| `border-width` | Sets border thickness | `border-width: 3px;` |
| `border-style` | Defines border type (solid, dashed, dotted) | `border-style: dashed;` |
| `border-color` | Sets the border color | `border-color: red;` |

**Example:**  

div {
  border: 2px solid black; /* 2px black solid border */
  border-radius: 10px; /* Rounded corners */
}

### **D) Margin (Outside Space)**
| Property | Description | Example |
|----------|------------|---------|
| `margin` | Space outside the element | `margin: 20px;` |
| `margin-top` | Space above the element | `margin-top: 10px;` |
| `margin-right` | Space on the right side | `margin-right: 15px;` |
| `margin-bottom` | Space below the element | `margin-bottom: 10px;` |
| `margin-left` | Space on the left side | `margin-left: 15px;` |
| `margin: auto;` | Centers the element | `margin: auto;` |

**Example:**  

div {
  margin: 10px auto; /* Center element */
  width: 300px;
  background-color: lightgray;
}

---

## **3. Example: Applying the Box Model**

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CSS Box Model</title>
    <style>
        .box {
            width: 250px;
            height: 100px;
            padding: 20px;
            border: 3px solid black;
            margin: 20px auto;
            background-color: lightblue;
            text-align: center;
        }
    </style>
</head>
<body>

    <div class="box">Hello, Box Model!</div>

</body>
</html>

**What happens here?**  
`width: 250px;` → The content area is 250px wide.  
`padding: 20px;` → Adds 20px space **inside** the border.  
`border: 3px solid black;` → The element has a **3px black border**.  
`margin: 20px auto;` → Adds **20px outside space** and centers the box.  

---

## **4. CSS Layout Techniques**

### **A) Display Property**
Defines how elements are displayed.  

| Value | Description |
|--------|------------|
| `block` | Element takes full width (default for `<div>`, `<p>`, etc.) |
| `inline` | Element takes only as much width as needed (for `<span>`, `<a>`, etc.) |
| `inline-block` | Like `inline`, but allows setting width & height |
| `none` | Hides the element |

**Example:**  

div {
  display: inline-block;
  width: 100px;
  height: 50px;
  background-color: orange;
}

### **B) Position Property**
Controls element placement.  

| Value | Description |
|--------|------------|
| `static` | Default position (normal flow) |
| `relative` | Position relative to itself |
| `absolute` | Position relative to nearest positioned ancestor |
| `fixed` | Position fixed on the screen |
| `sticky` | Sticks to a position when scrolling |

**Example:**  

.fixed-box {
  position: fixed;
  top: 0;
  width: 100%;
  background-color: red;
}

### **C) Float & Clear**
- `float` → Moves an element left or right.  
- `clear` → Stops floating elements from affecting other elements.  

**Example: Floating an Image**  

img {
  float: left;
  margin-right: 10px;
}

---

## **5. Quick Revision**
**Box Model** = Content + Padding + Border + Margin.  
`padding` (inside space), `margin` (outside space).  
`border` styles an element’s boundary.  
`display`, `position`, and `float` control layout.  

---

## **6. Practice Exercises**
1️**Write CSS to create a box with:**
   - Width: `300px`
   - Height: `150px`
   - Padding: `20px`
   - Border: `5px dashed blue`
   - Margin: `auto`
   - Background-color: `lightgray`  

2️**Use `position: absolute;` to place a div at the bottom-right corner of a webpage.**  

=======================


### **CSS Box Model in a Card Design**  

### ** Scenario: Profile Card Design**  
Imagine a **social media profile card** that contains:  
Profile picture  
User's name  
Short bio  
A "Follow" button  

---

### Profile Card**
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile Card</title>
    <style>
        /* Card container */
        .profile-card {
            width: 300px; /* Content width */
            padding: 20px; /* Space inside the card */
            border: 2px solid #ddd; /* Light border */
            border-radius: 10px; /* Rounded corners */
            margin: 50px auto; /* Center the card */
            box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2); /* Shadow effect */
            text-align: center;
            background-color: #fff;
            font-family: Arial, sans-serif;
        }

        /* Profile Image */
        .profile-img {
            width: 100px;
            height: 100px;
            border-radius: 50%; /* Make it circular */
            border: 3px solid #007bff;
        }

        /* Name Style */
        .profile-name {
            font-size: 22px;
            font-weight: bold;
            margin: 10px 0;
        }

        /* Bio Style */
        .profile-bio {
            font-size: 14px;
            color: #555;
            margin-bottom: 15px;
        }

        /* Follow Button */
        .follow-btn {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }

        /* Button Hover Effect */
        .follow-btn:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>

    <div class="profile-card">
        <img src="https://via.placeholder.com/100" alt="Profile Picture" class="profile-img">
        <div class="profile-name">John Doe</div>
        <div class="profile-bio">Web Developer | Tech Enthusiast</div>
        <button class="follow-btn">Follow</button>
    </div>

</body>
</html>


---

###  How the Box Model is Used Here?**
`width: 300px;` → Defines the card width.  
`padding: 20px;` → Creates space **inside** the card.  
`border: 2px solid #ddd;` → Adds a light border.  
`margin: 50px auto;` → Centers the card.  
`border-radius: 10px;` → Gives rounded corners.  
`box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);` → Adds a **shadow** for a 3D effect.  
`img { border-radius: 50%; }` → Makes the profile picture **round**.  

---

###  Where is This Used in Real Life?**
**Social Media (LinkedIn, Twitter, Facebook)** → Profile Cards  
**E-commerce (Amazon, Flipkart)** → Product Cards  
**Blogs and News Websites** → Author Bio Cards  

---

###  Challenge: Customize Your Card!**
1️ Change the **background color** of the card.  
2️ Add **icons** (like a Twitter or Instagram logo).  
3️ Use **CSS animations** (e.g., button hover effects).  

===========================================


###  Responsive Navigation Bar (Menu)**  


### Scenario: Creating a Responsive Navigation Bar**  
A logo  
Navigation links (Home, About, Services, Contact)  
A hover effect  
Responsive design for mobile screens  

---

###  Responsive Navbar**
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Responsive Navbar</title>
    <style>
        /* Reset some default styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* Navbar Container */
        .navbar {
            display: flex;
            justify-content: space-between; /* Space between logo & links */
            align-items: center;
            background-color: #007bff;
            padding: 15px 20px;
        }

        /* Logo Style */
        .logo {
            font-size: 22px;
            font-weight: bold;
            color: white;
        }

        /* Navbar Links */
        .nav-links {
            list-style: none;
            display: flex;
        }

        .nav-links li {
            margin: 0 15px;
        }

        .nav-links a {
            text-decoration: none;
            color: white;
            font-size: 18px;
            font-weight: bold;
            transition: 0.3s;
        }

        /* Hover Effect */
        .nav-links a:hover {
            color: yellow;
        }

        /* Responsive Navbar (for smaller screens) */
        @media (max-width: 600px) {
            .navbar {
                flex-direction: column;
                text-align: center;
            }

            .nav-links {
                flex-direction: column;
                margin-top: 10px;
            }

            .nav-links li {
                margin: 5px 0;
            }
        }
    </style>
</head>
<body>

    <nav class="navbar">
        <div class="logo">MyWebsite</div>
        <ul class="nav-links">
            <li><a href="#">Home</a></li>
            <li><a href="#">About</a></li>
            <li><a href="#">Services</a></li>
            <li><a href="#">Contact</a></li>
        </ul>
    </nav>

</body>
</html>


---

### How is CSS Used Here?**
`display: flex;` → Makes the navbar **horizontal**.  
`justify-content: space-between;` → Spaces out logo & links.  
`color: white;` → Makes text **visible on dark background**.  
`transition: 0.3s;` → Smooth hover effect.  
`@media (max-width: 600px) { ... }` → **Responsive Design** for small screens (mobile-friendly).  

---

###  Where is This Used in Real Life?**
**E-commerce Websites** → Amazon, Flipkart navigation menus  
**Social Media Platforms** → Facebook, Twitter menus  
**Company Websites** → Navbar for "About Us", "Contact", etc.  

---

###  Challenge: Customize Your Navbar!**
1️ Change the **background color** of the navbar.  
2️ Add a **hamburger menu** for mobile screens.  
3️ Include **dropdown menus** for subpages.  
